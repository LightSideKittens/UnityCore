using System;

namespace TL
{
#pragma warning disable CS1574
	/// <summary>Identifier of a private chat, basic group, group or channel (see <a href="https://corefork.telegram.org/api/peers">here »</a> for more info).		<para>See <a href="https://corefork.telegram.org/type/Peer"/></para>		<para>Derived classes: <see cref="PeerUser"/>, <see cref="PeerChat"/>, <see cref="PeerChannel"/></para></summary>
	public abstract partial class Peer : IObject { }

	/// <summary>Object defines the set of users and/or groups that generate notifications.		<para>See <a href="https://corefork.telegram.org/type/InputNotifyPeer"/></para>		<para>Derived classes: <see cref="InputNotifyPeer"/>, <see cref="InputNotifyUsers"/>, <see cref="InputNotifyChats"/>, <see cref="InputNotifyBroadcasts"/>, <see cref="InputNotifyForumTopic"/></para></summary>
    public abstract partial class InputNotifyPeerBase : IObject { }

	/// <summary>Notifications generated by a certain user or group.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyPeer"/></para></summary>
	[TLDef(0xB8BC5B0C)]
	public sealed partial class InputNotifyPeer : InputNotifyPeerBase
	{
		/// <summary>User or group</summary>
		public InputPeer peer;
	}
	/// <summary>Notifications generated by all users.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyUsers"/></para></summary>
	[TLDef(0x193B4417)]
	public sealed partial class InputNotifyUsers : InputNotifyPeerBase { }
	/// <summary>Notifications generated by all groups.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyChats"/></para></summary>
	[TLDef(0x4A95E84E)]
	public sealed partial class InputNotifyChats : InputNotifyPeerBase { }
	/// <summary>All <a href="https://corefork.telegram.org/api/channel">channels</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyBroadcasts"/></para></summary>
	[TLDef(0xB1DB7C7E)]
	public sealed partial class InputNotifyBroadcasts : InputNotifyPeerBase { }
	/// <summary>Notifications generated by a <a href="https://corefork.telegram.org/api/forum#forum-topics">topic</a> in a <a href="https://corefork.telegram.org/api/forum">forum</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyForumTopic"/></para></summary>
	[TLDef(0x5C467992)]
	public sealed partial class InputNotifyForumTopic : InputNotifyPeerBase
	{
		/// <summary>Forum ID</summary>
		public InputPeer peer;
		/// <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Topic ID</a></summary>
		public int top_msg_id;
	}

	/// <summary>Notification settings.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerNotifySettings"/></para></summary>
	[TLDef(0xCACB6AE2)]
	public sealed partial class InputPeerNotifySettings : IObject
	{
		/// <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
		public Flags flags;
		/// <summary>If the text of the message shall be displayed in notification</summary>
		[IfFlag(0)] public bool show_previews;
		/// <summary>Peer was muted?</summary>
		[IfFlag(1)] public bool silent;
		/// <summary>Date until which all notifications shall be switched off</summary>
		[IfFlag(2)] public DateTime mute_until;
		/// <summary>Identifier of an audio file to play for notifications.</summary>
		[IfFlag(3)] public NotificationSound sound;
		/// <summary>Whether story notifications should be disabled.</summary>
		[IfFlag(6)] public bool stories_muted;
		/// <summary>Whether the sender name should be displayed in story notifications.</summary>
		[IfFlag(7)] public bool stories_hide_sender;
		/// <summary>Identifier of an audio file to play for story notifications.</summary>
		[IfFlag(8)] public NotificationSound stories_sound;

		[Flags] public enum Flags : uint
		{
			/// <summary>Field <see cref="show_previews"/> has a value</summary>
			has_show_previews = 0x1,
			/// <summary>Field <see cref="silent"/> has a value</summary>
			has_silent = 0x2,
			/// <summary>Field <see cref="mute_until"/> has a value</summary>
			has_mute_until = 0x4,
			/// <summary>Field <see cref="sound"/> has a value</summary>
			has_sound = 0x8,
			/// <summary>Field <see cref="stories_muted"/> has a value</summary>
			has_stories_muted = 0x40,
			/// <summary>Field <see cref="stories_hide_sender"/> has a value</summary>
			has_stories_hide_sender = 0x80,
			/// <summary>Field <see cref="stories_sound"/> has a value</summary>
			has_stories_sound = 0x100,
		}
	}

	/// <summary>Notification settings.		<para>See <a href="https://corefork.telegram.org/constructor/peerNotifySettings"/></para></summary>
	[TLDef(0x99622C0C)]
	public sealed partial class PeerNotifySettings : IObject
	{
		/// <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
		public Flags flags;
		/// <summary>(Ternary value) If set, indicates whether or not to display previews of messages in notifications; otherwise the default behavior should be used.</summary>
		[IfFlag(0)] public bool show_previews;
		/// <summary>(Ternary value) If set, indicates whether to mute or unmute the peer; otherwise the default behavior should be used.</summary>
		[IfFlag(1)] public bool silent;
		/// <summary>Mute all notifications until this date</summary>
		[IfFlag(2)] public DateTime mute_until;
		/// <summary>Notification sound for the official iOS application</summary>
		[IfFlag(3)] public NotificationSound ios_sound;
		/// <summary>Notification sound for the official android application</summary>
		[IfFlag(4)] public NotificationSound android_sound;
		/// <summary>Notification sound for other applications</summary>
		[IfFlag(5)] public NotificationSound other_sound;
		/// <summary>Whether story notifications should be disabled.</summary>
		[IfFlag(6)] public bool stories_muted;
		/// <summary>Whether the sender name should be displayed in story notifications.</summary>
		[IfFlag(7)] public bool stories_hide_sender;
		/// <summary>Sound for story notifications on the official iOS application</summary>
		[IfFlag(8)] public NotificationSound stories_ios_sound;
		/// <summary>Sound for story notifications on the official Android application</summary>
		[IfFlag(9)] public NotificationSound stories_android_sound;
		/// <summary>Sound for story notifications on other applications</summary>
		[IfFlag(10)] public NotificationSound stories_other_sound;

		[Flags] public enum Flags : uint
		{
			/// <summary>Field <see cref="show_previews"/> has a value</summary>
			has_show_previews = 0x1,
			/// <summary>Field <see cref="silent"/> has a value</summary>
			has_silent = 0x2,
			/// <summary>Field <see cref="mute_until"/> has a value</summary>
			has_mute_until = 0x4,
			/// <summary>Field <see cref="ios_sound"/> has a value</summary>
			has_ios_sound = 0x8,
			/// <summary>Field <see cref="android_sound"/> has a value</summary>
			has_android_sound = 0x10,
			/// <summary>Field <see cref="other_sound"/> has a value</summary>
			has_other_sound = 0x20,
			/// <summary>Field <see cref="stories_muted"/> has a value</summary>
			has_stories_muted = 0x40,
			/// <summary>Field <see cref="stories_hide_sender"/> has a value</summary>
			has_stories_hide_sender = 0x80,
			/// <summary>Field <see cref="stories_ios_sound"/> has a value</summary>
			has_stories_ios_sound = 0x100,
			/// <summary>Field <see cref="stories_android_sound"/> has a value</summary>
			has_stories_android_sound = 0x200,
			/// <summary>Field <see cref="stories_other_sound"/> has a value</summary>
			has_stories_other_sound = 0x400,
		}
	}

	/// <summary>List of actions that are possible when interacting with this user, to be shown as suggested actions in the <a href="https://corefork.telegram.org/api/action-bar">chat action bar »</a>, see <a href="https://corefork.telegram.org/api/action-bar">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/constructor/peerSettings"/></para></summary>
	[TLDef(0xACD66C5E)]
	public sealed partial class PeerSettings : IObject
	{
		/// <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
		public Flags flags;
		/// <summary>Distance in meters between us and this peer</summary>
		[IfFlag(6)] public int geo_distance;
		/// <summary>If set, this is a private chat with an administrator of a chat or channel to which the user sent a join request, and this field contains the chat/channel's title.</summary>
		[IfFlag(9)] public string request_chat_title;
		/// <summary>If set, this is a private chat with an administrator of a chat or channel to which the user sent a join request, and this field contains the timestamp when the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> was sent.</summary>
		[IfFlag(9)] public DateTime request_chat_date;
		/// <summary>Contains the ID of the <a href="https://corefork.telegram.org/api/business#connected-bots">business bot »</a> managing this chat, used to display info about the bot in the action bar.</summary>
		[IfFlag(13)] public long business_bot_id;
		/// <summary>Contains a <a href="https://corefork.telegram.org/api/links">deep link »</a>, used to open a management menu in the business bot. This flag is set if and only if <c>business_bot_id</c> is set.</summary>
		[IfFlag(13)] public string business_bot_manage_url;

		[Flags] public enum Flags : uint
		{
			/// <summary>Whether we can still report the user for spam</summary>
			report_spam = 0x1,
			/// <summary>Whether we can add the user as contact</summary>
			add_contact = 0x2,
			/// <summary>Whether we can block the user</summary>
			block_contact = 0x4,
			/// <summary>Whether we can share the user's contact</summary>
			share_contact = 0x8,
			/// <summary>Whether a special exception for contacts is needed</summary>
			need_contacts_exception = 0x10,
			/// <summary>Whether we can report a geogroup as irrelevant for this location</summary>
			report_geo = 0x20,
			/// <summary>Field <see cref="geo_distance"/> has a value</summary>
			has_geo_distance = 0x40,
			/// <summary>Whether this peer was automatically archived according to <see cref="GlobalPrivacySettings">privacy settings</see> and can be unarchived</summary>
			autoarchived = 0x80,
			/// <summary>If set, this is a recently created group chat to which new members can be invited</summary>
			invite_members = 0x100,
			/// <summary>Fields <see cref="request_chat_title"/> and <see cref="request_chat_date"/> have a value</summary>
			has_request_chat_title = 0x200,
			/// <summary>This flag is set if <c>request_chat_title</c> and <c>request_chat_date</c> fields are set and the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> is related to a channel (otherwise if only the request fields are set, the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> is related to a chat).</summary>
			request_chat_broadcast = 0x400,
			/// <summary>This flag is set if both <c>business_bot_id</c> and <c>business_bot_manage_url</c> are set and all <a href="https://corefork.telegram.org/api/business#connected-bots">connected business bots »</a> were paused in this chat using <see cref="SchemaExtensions.Account_ToggleConnectedBotPaused">Account_ToggleConnectedBotPaused</see>.</summary>
			business_bot_paused = 0x800,
			/// <summary>This flag is set if both <c>business_bot_id</c> and <c>business_bot_manage_url</c> are set and <a href="https://corefork.telegram.org/api/business#connected-bots">connected business bots »</a> can reply to messages in this chat, as specified by the settings during <a href="https://corefork.telegram.org/api/business#connected-bots">initial configuration</a>.</summary>
			business_bot_can_reply = 0x1000,
			/// <summary>Fields <see cref="business_bot_id"/> and <see cref="business_bot_manage_url"/> have a value</summary>
			has_business_bot_id = 0x2000,
		}
	}
	
	/// <summary>Chat partner		<para>See <a href="https://corefork.telegram.org/constructor/peerUser"/></para></summary>
	[TLDef(0x59511722)]
	public sealed partial class PeerUser : Peer
	{
		/// <summary>User identifier</summary>
		public long user_id;
	}
	/// <summary>Group.		<para>See <a href="https://corefork.telegram.org/constructor/peerChat"/></para></summary>
	[TLDef(0x36C6019A)]
	public sealed partial class PeerChat : Peer
	{
		/// <summary>Group identifier</summary>
		public long chat_id;
	}
	/// <summary>Channel/supergroup		<para>See <a href="https://corefork.telegram.org/constructor/peerChannel"/></para></summary>
	[TLDef(0xA2A5371E)]
	public sealed partial class PeerChannel : Peer
	{
		/// <summary>Channel ID</summary>
		public long channel_id;
	}
	
	/// <summary>Geolocated peer		<para>See <a href="https://corefork.telegram.org/type/PeerLocated"/></para>		<para>Derived classes: <see cref="PeerLocated"/>, <see cref="PeerSelfLocated"/></para></summary>
	public abstract partial class PeerLocatedBase : IObject
	{
		/// <summary>Validity period of current data</summary>
		public virtual DateTime Expires => default;
	}
	/// <summary>Peer geolocated nearby		<para>See <a href="https://corefork.telegram.org/constructor/peerLocated"/></para></summary>
	[TLDef(0xCA461B5D)]
	public sealed partial class PeerLocated : PeerLocatedBase
	{
		/// <summary>Peer</summary>
		public Peer peer;
		/// <summary>Validity period of current data</summary>
		public DateTime expires;
		/// <summary>Distance from the peer in meters</summary>
		public int distance;

		/// <summary>Validity period of current data</summary>
		public override DateTime Expires => expires;
	}
	/// <summary>Current peer		<para>See <a href="https://corefork.telegram.org/constructor/peerSelfLocated"/></para></summary>
	[TLDef(0xF8EC284B)]
	public sealed partial class PeerSelfLocated : PeerLocatedBase
	{
		/// <summary>Expiry of geolocation info for current peer</summary>
		public DateTime expires;

		/// <summary>Expiry of geolocation info for current peer</summary>
		public override DateTime Expires => expires;
	}
	
	/// <summary>Information about a blocked peer		<para>See <a href="https://corefork.telegram.org/constructor/peerBlocked"/></para></summary>
	[TLDef(0xE8FD8014)]
	public sealed partial class PeerBlocked : IObject
	{
		/// <summary>Peer ID</summary>
		public Peer peer_id;
		/// <summary>When was the peer blocked</summary>
		public DateTime date;
	}
	/// <summary><a href="https://corefork.telegram.org/api/stories">Stories</a> associated to a peer		<para>See <a href="https://corefork.telegram.org/constructor/peerStories"/></para></summary>
	[TLDef(0x9A35E999)]
	public sealed partial class PeerStories : IObject
	{
		/// <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
		public Flags flags;
		/// <summary>The peer</summary>
		public Peer peer;
		/// <summary>If set, contains the ID of the maximum read story</summary>
		[IfFlag(0)] public int max_read_id;
		/// <summary>Stories</summary>
		public StoryItemBase[] stories;

		[Flags] public enum Flags : uint
		{
			/// <summary>Field <see cref="max_read_id"/> has a value</summary>
			has_max_read_id = 0x1,
		}
	}
	/// <summary>Represents a <a href="https://corefork.telegram.org/api/colors">color palette »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/peerColor"/></para></summary>
	[TLDef(0xB54B5ACF)]
	public sealed partial class PeerColor : IObject
	{
		/// <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
		public Flags flags;
		/// <summary><a href="https://corefork.telegram.org/api/colors">Color palette ID, see here »</a> for more info; if not set, the default palette should be used.</summary>
		[IfFlag(0)] public int color;
		/// <summary>Optional <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji ID</a> used to generate the pattern.</summary>
		[IfFlag(1)] public long background_emoji_id;

		[Flags] public enum Flags : uint
		{
			/// <summary>Field <see cref="color"/> has a value</summary>
			has_color = 0x1,
			/// <summary>Field <see cref="background_emoji_id"/> has a value</summary>
			has_background_emoji_id = 0x2,
		}
	}
	
}